{"version":3,"sources":["assets/images/tmdb.svg","assets/images/Poster_not_available.jpg","components/header.js","actions/index.js","components/trailer.js","components/card.js","App.js","reducers/movieid.js","reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","resultRenderer","_ref","datares","react_default","a","createElement","key","id","className","List","divided","verticalAlign","Item","Content","title","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleResultSelect","e","_ref2","result","saveresult","setState","query","movieid","movieDetails","handleSearchChange","_ref3","value","isLoading","results","searchMovies","state","fetch","then","res","json","data","map","item","debounce","bind","assertThisInitialized","_Object$assign","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","src","tmdblogo","width","Search","assign","loading","showNoResults","onResultSelect","onSearchChange","defineProperty","Component","connect","dispatch","moviedet","payload","ModalExampleControlled","modalOpen","handleOpen","handleClose","Modal","open","basic","size","Header_Header","content","movietrailer","Embed","placeholder","source","Actions","Button","color","onClick","inverted","Icon","name","numeral","require","Card","description","tagline","moviedata","movieidstate","idnum","url","fetchApi","_this2","backdropIMG","backdrop_path","document","body","style","backgroundImage","fetchMovieID","movieidnum","nextProps","generes","genres","production","production_companies","generesArr","productionArr","_","push","posterPath","poster_path","original_title","undefined","overview","isEmpty","join","release_date","revenue","format","runtime","vote_average","circular","icon","alt","NotAvailable","trailer_ModalExampleControlled","videos","App","header","card","arguments","length","action","console","log","movieDBApp","combineReducers","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0c04f4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tmdb.27b65cb4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Poster_not_available.b5384865.jpg\";","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport tmdblogo from '../assets/images/tmdb.svg';\r\nimport { Image, Search, Grid, List } from 'semantic-ui-react';\r\nimport debounce from 'lodash/debounce';\r\nimport { movieDetails } from '../actions'\r\n\r\nconst resultRenderer = ({ datares }) => <div>\r\n    <div key={datares.id} className='content'>\r\n    <List divided verticalAlign='middle'>\r\n      <List.Item>\r\n        <List.Content>{datares.title}</List.Content>\r\n      </List.Item>\r\n    </List>\r\n    </div>\r\n  </div>\r\n\r\n\r\nclass Header extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      isLoading: false,\r\n      results: [],\r\n      query: '',\r\n      movieid:''\r\n    }\r\n    this.searchMovies = debounce(this.searchMovies.bind(this), 500);\r\n  }\r\n\r\n  handleResultSelect = (e, { result }) => {\r\n    //console.log(\"results\",result.datares.id);\r\n    let saveresult = result.datares.id\r\n    this.setState({\r\n      query: result.datares.title,\r\n      movieid: result.datares.id\r\n    });\r\n    //console.log(\"check props\",this.props.movieDetails(saveresult));\r\n    this.props.movieDetails(saveresult)\r\n  }\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({\r\n      isLoading: true,\r\n      results: [],\r\n      query: value\r\n    });\r\n    this.searchMovies()\r\n  }\r\n\r\n  searchMovies = () => {\r\n    if (this.state.query) {\r\n      fetch(`https://api.themoviedb.org/3/search/movie?&query=`+this.state.query+`?&api_key=94ceb56d1cec3cfde6b78c4787659689`).then((res) => res.json()).then((data) => {\r\n        this.setState({\r\n          isLoading: true,\r\n          results:data.results.map((item) => ({\r\n              datares: item,\r\n          }))\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    //console.log(\"state movie id\",this.props);\r\n    return(\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          <img src={tmdblogo} width=\"50%\"/>\r\n        </a>\r\n        <div>\r\n          <Search\r\n            loading={false}\r\n            showNoResults={true}\r\n            onResultSelect={this.handleResultSelect}\r\n            onSearchChange={this.handleSearchChange}\r\n            resultRenderer={resultRenderer}\r\n            results={this.state.results}\r\n            showNoResults={false}\r\n            value={this.state.query}\r\n            size={'big'}\r\n            {...this.props}\r\n          />\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    movieDetails: moviedet => dispatch(movieDetails(moviedet))\r\n  };\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(Header)\r\n","export const movieDetails = moviedet => {\r\n  return {\r\n    type: 'MOVIE',\r\n    payload:moviedet\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, Header, Icon, Modal, Embed, Dimmer } from 'semantic-ui-react'\r\n\r\nexport default class ModalExampleControlled extends Component {\r\n  state = { modalOpen: false }\r\n\r\n  handleOpen = () => this.setState({ modalOpen: true })\r\n\r\n  handleClose = () => this.setState({ modalOpen: false })\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        open={this.props.handleOpen}\r\n        basic\r\n        size='small'\r\n      >\r\n        <Header content='Trailer' />\r\n        <Modal.Content>\r\n          {this.props.movietrailer['results'][0]!==null ? <Embed id={this.props.movietrailer['results'][0]['key']} placeholder='' source='youtube' /> : \"No trailer available\"}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color='green' onClick={this.props.handleOpen} inverted>\r\n            <Icon name='checkmark' /> Close\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Trailer from './trailer';\r\nimport { Button, Icon } from 'semantic-ui-react'\r\nimport NotAvailable from '../assets/images/Poster_not_available.jpg'\r\nimport _ from 'lodash';\r\nvar numeral = require('numeral');\r\n\r\nclass Card extends Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      title:'',\r\n      description:'',\r\n      tagline:'',\r\n      moviedata:'',\r\n      movieidstate:'',\r\n      modalOpen:false,\r\n    }\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({ modalOpen: !this.state.modalOpen })\r\n  }\r\n\r\n  fetchMovieID(idnum) {\r\n    //console.log(\"propsid\",idnum);\r\n    let url = `https://api.themoviedb.org/3/movie/`+idnum+`?&api_key=94ceb56d1cec3cfde6b78c4787659689&append_to_response=videos`\r\n    this.fetchApi(url)\r\n  }\r\n\r\n  fetchApi(url) {\r\n    //console.log(url);\r\n    fetch(url).then((res) => res.json()).then((data) => {\r\n      //console.log(\"data\",data);\r\n      this.setState({\r\n        moviedata:data\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    let backdropIMG = 'https://image.tmdb.org/t/p/original' + this.state.moviedata.backdrop_path;\r\n    document.body.style.backgroundImage = 'url(' + backdropIMG + ')';\r\n  }\r\n\r\n\r\n  componentWillMount(){\r\n    this.fetchMovieID(this.props.movieidnum)\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    this.fetchMovieID(nextProps.movieidnum)\r\n  }\r\n\r\n  render(){\r\n    let generes = this.state.moviedata.genres\r\n    let production = this.state.moviedata.production_companies\r\n    let generesArr = []\r\n    let productionArr = []\r\n\r\n    _.map(generes,function(item){\r\n      generesArr.push(item.name)\r\n    })\r\n\r\n    _.map(production,function(item){\r\n      productionArr.push(item.name)\r\n    })\r\n\r\n    let posterPath = 'https://image.tmdb.org/t/p/w500/'+this.state.moviedata.poster_path\r\n\r\n    return(\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 order-2 order-lg-1 col-md-8 moviecontent\">\r\n            <div className=\"moviebody\">\r\n              <div className=\"card-body\">\r\n                <h1 className=\"card-title\">{this.state.moviedata.original_title}</h1>\r\n                <h4 className=\"card-text headertext\">{this.state.moviedata.tagline!==undefined ? this.state.moviedata.tagline : 'NA'}</h4>\r\n                <p className=\"card-text\">{this.state.moviedata.overview}</p>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-text headertext\">Genere : {!_.isEmpty(generesArr) ?  generesArr.join(' , ') : 'NA'}</h4>\r\n                <p className=\"card-text headertext\">Production Companies : {!_.isEmpty(productionArr) ? productionArr.join(' , ') : 'NA'}</p>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-6 col-md-6\">\r\n                  <div className=\"card-body\">\r\n                    <h6 className=\"card-text\">Released Date: </h6>\r\n                    <h4 className=\"card-text headertext\">{this.state.moviedata.release_date!==undefined ? this.state.moviedata.release_date : 'NA'}</h4>\r\n                  </div>\r\n\r\n                  {/*<div className=\"card-body\">\r\n                    <h6 className=\"card-text\">Budget: </h6>\r\n                    <h4 className=\"card-text headertext\">$116,000,000</h4>\r\n                  </div>*/}\r\n\r\n                  <div className=\"card-body\">\r\n                    <h6 className=\"card-text\">Box Office Collections: </h6>\r\n                    <h4 className=\"card-text headertext\">{this.state.moviedata.revenue!==undefined ? numeral(this.state.moviedata.revenue).format('($0,0)') : 'NA'}</h4>\r\n                  </div>\r\n\r\n                </div>\r\n                <div className=\"col-6 col-md-6\">\r\n                  <div className=\"card-body\">\r\n                    <h6 className=\"card-text\">Duration: </h6>\r\n                    <h4 className=\"card-text headertext\">{this.state.moviedata.runtime!==undefined ? this.state.moviedata.runtime : 'NA'} mins</h4>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <h6 className=\"card-text\">Review Ratings: </h6>\r\n                    <h4 className=\"card-text headertext\">{this.state.moviedata.vote_average!==undefined ? this.state.moviedata.vote_average : 'NA'} / 10</h4>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6 col-md-6\">\r\n                  <div className=\"card-body\">\r\n                    <h6 className=\"card-text\">Trailer: </h6>\r\n                    <Button circular icon='play circle outline' onClick={this.handleOpen}/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 order-1 order-lg-2 col-md-4 imagecontent\">\r\n            {this.state.moviedata.poster_path!=null ? <img className=\"posterimage\" src={posterPath} alt=\"poster image\"/> : <img src={NotAvailable}/>}\r\n          </div>\r\n        </div>\r\n        {this.state.modalOpen ? <Trailer handleOpen={this.handleOpen} movietrailer={this.state.moviedata.videos}/> : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    movieidnum:state.movieidnum\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Card)\r\n","import React, { Component } from 'react';\r\nimport Header from './components/header'\r\nimport Card from './components/card';\r\n\r\nimport './assets/css/app.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <div className=\"container\">\r\n          <div className=\"col-12 col-lg-12\">\r\n            <Card/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const movieidnum = (state = 492261, action) => {\r\n  console.log(\"insied\");\r\n  switch (action.type) {\r\n    case 'MOVIE':\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n \r\nexport default movieidnum\r\n","import {combineReducers} from 'redux';\r\nimport movieidnum from './movieid.js'\r\n\r\nconst movieDBApp = combineReducers({\r\n  movieidnum\r\n})\r\n \r\nexport default movieDBApp\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore} from 'redux';\r\nimport movieDBApp from './reducers/index.js'\r\nimport * as serviceWorker from './serviceWorker';\r\nlet store = createStore(movieDBApp)\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <App />\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}