{"version":3,"sources":["components/header.js","components/card.js","App.js","serviceWorker.js","index.js","assets/images/tmdb.svg"],"names":["Header","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","src","tmdblogo","width","id","placeholder","Component","Card","class","App","console","log","document","body","style","backgroundImage","header_Header","card_Card","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"yOAGqBA,mLAGjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBC,KAAK,SAASC,cAAY,WAAWC,cAAY,uBAAuBC,gBAAc,sBAAsBC,gBAAc,QAAQC,aAAW,qBAC9KT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeO,KAAK,KAC/BV,EAAAC,EAAAC,cAAA,OAAKS,IAAKC,IAAUC,MAAM,SAE5Bb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,uBAC3Cd,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BACdH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBAAuBC,KAAK,SAASW,YAAY,SAASN,aAAW,qBAb9DO,aCDfC,mLAGjB,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,gBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,8DACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,mOAGFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,qCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,6DAGFH,EAAAC,EAAAC,cAAA,OAAKgB,MAAM,OACTlB,EAAAC,EAAAC,cAAA,OAAKgB,MAAM,kBACTlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,mBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,eAQFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,4BACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,kBAIJH,EAAAC,EAAAC,cAAA,OAAKgB,MAAM,kBACTlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,cACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,eAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,oBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,uBAzCoBa,aCgCnBG,qMA1BXC,QAAQC,IAAI,6BACZC,SAASC,KAAKC,MAAMC,gBAAkB,8GAItC,OACEzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwB,EAAD,MACE1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mDACbH,EAAAC,EAAAC,cAACyB,EAAD,OAEF3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcQ,IAAI,gFAlBjCK,cCOEY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlC,EAAAC,EAAAC,cAACiC,EAAD,MAASb,SAASc,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.20ed0377.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport tmdblogo from '../assets/images/tmdb.svg';\r\n\r\nexport default class Header extends Component{\r\n\r\n  render(){\r\n    return(\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          <img src={tmdblogo} width=\"50%\"/>\r\n        </a>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n          <form className=\"form-inline my-2 my-lg-0\">\r\n            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Card extends Component{\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"moviebody\">\r\n        <div className=\"card-body\">\r\n          <h1 className=\"card-title\">Interstellar</h1>\r\n          <h4 className=\"card-text headertext\">ManKind was born on earth. It was never meant to die here.</h4>\r\n          <p className=\"card-text\">Interstellar chronicles the adventures of a group of explorers who make use of a newly discovered wormhole to surpass the limitations on human space travel and conquer the vast distances involved in an interstellar voyage.</p>\r\n        </div>\r\n\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-text  headertext\">Adventure, Drama, Science Fiction</h4>\r\n          <p className=\"card-text\">Legendary Entertainment, Syncopy, Lynda Obst Productions</p>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-6 col-md-6\">\r\n            <div className=\"card-body\">\r\n              <h6 className=\"card-text\">Released Date: </h6>\r\n              <h4 className=\"card-text headertext\">05-11-2014</h4>\r\n            </div>\r\n\r\n            {/*<div className=\"card-body\">\r\n              <h6 className=\"card-text\">Budget: </h6>\r\n              <h4 className=\"card-text headertext\">$116,000,000</h4>\r\n            </div>*/}\r\n\r\n            <div className=\"card-body\">\r\n              <h6 className=\"card-text\">Box Office Collections: </h6>\r\n              <h4 className=\"card-text headertext\">$675,120,017</h4>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"col-6 col-md-6\">\r\n            <div className=\"card-body\">\r\n              <h6 className=\"card-text\">Duration: </h6>\r\n              <h4 className=\"card-text headertext\">2.81 hours</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <h6 className=\"card-text\">Review Ratings: </h6>\r\n              <h4 className=\"card-text headertext\">8.2 / 10</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n\r\n}\r\n","import React, { Component } from 'react';\nimport Header from './components/header'\nimport Card from './components/card';\nimport './assets/css/app.css';\n\nclass App extends Component {\n\n  componentDidMount(){\n    console.log(\"inside componentDidUpdate\");\n    document.body.style.backgroundImage = 'url(\"https://image.tmdb.org/t/p/original/xu9zaAevzQ5nnrsXN6JcahLnG4i.jpg\")'\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n          <div className=\"container\">\n            <div className=\"col-12 col-lg-12\">\n              <div className=\"row\">\n                <div className=\"col-12 order-2 order-lg-1 col-md-8 moviecontent\">\n                  <Card />\n                </div>\n                <div className=\"col-12 order-1 order-lg-2 col-md-4 imagecontent\">\n                  <img className=\"posterimage\" src=\"https://image.tmdb.org/t/p/w500/nBNZadXqJSdt05SHLqgT0HuC5Gm.jpg\" />\n                </div>\n              </div>\n            </div>\n          </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/tmdb.27b65cb4.svg\";"],"sourceRoot":""}